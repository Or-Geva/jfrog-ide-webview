import { IDependencyPage } from '../../../../model/dependencyPage'
import { getApplicabilityImg, getSeverityImage } from '../../../../utils/utils'
import css from './CveVulnerability.module.css'

export interface Props {
	data: IDependencyPage
}

const CveVulnerability = (props: Props): JSX.Element => {
	const optionalDetails = () => {
		let contextualAnalysis = <></>
		let cve = <></>
		let license = <></>
		let watchName = <></>
		let fixedVersion = <></>
		let jfrogSeverity = <></>
		if (props.data.extendedInformation?.jfrogResearchSeverity) {
			jfrogSeverity = (
				<li>
					<div className={css.container}>
						<span>JFrog severity: </span>
						<img
							className={css.image}
							src={getSeverityImage(props.data.extendedInformation?.jfrogResearchSeverity)}
							alt="severity level"/>
						<>{props.data.extendedInformation?.jfrogResearchSeverity}</>
					</div>
				</li>
			)
		}

		if (props.data.cve?.applicableData !== undefined) {
			contextualAnalysis = (
				<li>
					<div className={css.container}>
						<span>Contextual Analysis: </span>
						<img
							src={getApplicabilityImg(props.data.cve.applicableData.isApplicable)}
							alt="severity level"/>
						{props.data.cve.applicableData.isApplicable
							? 'The CVE is Applicable'
							: 'The CVE is not Applicable'}
					</div>
				</li>
			)
		}

		if (props.data.cve?.cvssV2Score || props.data.cve?.cvssV3Score) {
			cve = (
				<li>
					<span>CVSS score: </span>
					{props.data.cve?.cvssV2Score && <div className={css.redBox}>{props.data.cve.cvssV2Score} (v2)</div>}
					{props.data.cve?.cvssV3Score && <label className={css.yellowBox}> {props.data.cve.cvssV3Score} (v3)</label>}
				</li>
			)
		}

		if (props.data.license) {
			license = (
				<li>
					<span>License: </span>
					{props.data.license.map(el => el.name).join(', ')}
				</li>
			)
		}

		if (props.data.watchName) {
			watchName = (
				<li>
					<span>Watch: </span>
					{props.data.watchName.join(',')}
				</li>
			)
		}

		if (props.data.fixedVersion) {
			fixedVersion = (
				<li>
					<span>Fixed version: </span>
					{props.data.fixedVersion.join(', ')}
				</li>
			)
		}

		return (
			<>
				{jfrogSeverity}
				{contextualAnalysis}
				{cve}
				{license}
				{watchName}
				{fixedVersion}
			</>
		)
	}

	return (
		<>
			<li>
				<span>ID: </span>
				{props.data.id}
			</li>
			<li>
				<span>Component: </span>
				{props.data.component}
			</li>
			<li>
				<span>Version: </span>
				{props.data.version}
			</li>
			<li>
				<span>Severity: </span>
				{props.data.severity}
			</li>
			<li>
				<span>Type: </span>
				{props.data.type}
			</li>
			{optionalDetails()}
		</>
	)
}

export default CveVulnerability