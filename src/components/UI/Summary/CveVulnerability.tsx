import Row from '../Row/Row'
import { IDependencyPage } from './../../../model/dependencyPage'
import { getApplicabilityImg, getSeverityImage } from './../../../utils/utils'
import css from './CveVulnerability.module.css'

export interface Props {
	data: IDependencyPage
}

const CveVulnerability = (props: Props): JSX.Element => {
	const optionalDetails = () => {
		let contextualAnalysis = <></>
		let cve = <></>
		let license = <></>
		let watchName = <></>
		let fixedVersion = <></>
		let jfrogSeverity = <></>
		if (props.data.extendedInformation?.jfrogResearchSeverity) {
			jfrogSeverity = (
				<li>
					<div className={css.container}>
						<Row title="JFrog severity" data={props.data.extendedInformation?.jfrogResearchSeverity}/>
						<img
							className={css.image}
							src={getSeverityImage(props.data.extendedInformation?.jfrogResearchSeverity)}
							alt="severity level"/>
					</div>
				</li>
			)
		}

		if (props.data.cve?.applicableData !== undefined) {
			contextualAnalysis = (
				<li>
					<div className={css.container}>
						<Row
							title="Contextual Analysis" data={props.data.cve.applicableData.isApplicable
								? 'The CVE is Applicable'
								: 'The CVE is not Applicable'}>
							<img
								src={getApplicabilityImg(props.data.cve.applicableData.isApplicable)}
								alt="severity level"/>
						</Row>

					</div>
				</li>
			)
		}

		if (props.data.cve?.cvssV2Score || props.data.cve?.cvssV3Score) {
			cve = (
				<li>
					<Row title="CVSS score" data="">
						{props.data.cve?.cvssV2Score && <div className={css.redBox}>{props.data.cve.cvssV2Score} (v2)</div>}
						{props.data.cve?.cvssV3Score && <label className={css.yellowBox}> {props.data.cve.cvssV3Score} (v3)</label>}
					</Row>
				</li>
			)
		}

		if (props.data.license) {
			license = (
				<li>
					<Row title="License" data={props.data.license.map(el => el.name).join(', ')}/>
				</li>
			)
		}

		if (props.data.watchName) {
			watchName = (
				<li>
					<Row title="Watch" data={props.data.watchName.join(',')}/>
				</li>
			)
		}

		if (props.data.fixedVersion) {
			fixedVersion = (
				<li>
					<Row title="Fixed version" data={props.data.fixedVersion.join(', ')}/>
				</li>
			)
		} else {
			fixedVersion = (
				<li>
					<Row title="Fixed version" data="N/A"/>
				</li>)
		}

		return (
			<>
				{jfrogSeverity}
				{contextualAnalysis}
				{cve}
				{license}
				{watchName}
				{fixedVersion}
			</>
		)
	}

	return (
		<>
			<li>
				<Row title="ID" data={props.data.id}/>
			</li>
			<li>
				<Row title="Component" data={props.data.component}/>
			</li>
			<li>
				<Row title="Version" data={props.data.version}/>
			</li>
			<li>
				<Row title="Severity" data={props.data.severity}/>
			</li>
			<li>
				<Row title="Type" data={props.data.type}/>
			</li>
			{optionalDetails()}
		</>
	)
}

export default CveVulnerability